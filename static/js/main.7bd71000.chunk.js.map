{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Loader","className","fetchingTable","props","handleChange","e","data","state","value","target","java","JSON","parse","stringify","filter","topics","includes","setState","filteredData","loading","alert","bind","this","getData","fetch","then","results","json","window","location","reload","Dropdown","Toggle","variant","id","Menu","Button","onClick","refresh","map","index","url","description","join","levels","types","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7bd71000.chunk.js","sourcesContent":["import './App.css';\nimport React  from 'react';\nimport { Dropdown,Button,Alert } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst Loader = () => (\n  <div className=\"wrapper\">\n  <span>Loading...</span>\n</div>\n);\n\nexport default class fetchingTable extends React.Component{\n  \n constructor(props) {\n   super(props);\n\n   this.state = {\n    data: [],\n    filteredData: [],\n    loading:true,\n    alert:false,\n   };\n  this.handleChange=this.handleChange.bind(this);\n  }\n \n  componentDidMount(){\n     this.getData();\n  }\n  \n  getData() {\n     fetch('https://api.sampleapis.com/codingresources/codingResources')\n     .then(results => results.json())\n     .then(results => this.setState({data:results,filteredData:results,loading: false}));\n     \n  }\n\n  refresh(){\n  window.location.reload(false);\n  }\n \n\n  handleChange = (e) => {\n   const {data} = this.state;\n   const value = e.target.value;\n   const java = JSON.parse(JSON.stringify(data)).filter((data) => data.topics.includes(value));\n   this.setState({ filteredData: java});\n  };\n\n  render() {\n    const {filteredData} = this.state;\n    return (\n    <div className=\"parent\">\n      {this.state.loading ? <Loader/> : null}\n      <div className=\"header\">\n        <div className=\"lxr_logo\"></div>\n        <Dropdown className=\"dropdown_button\">\n        <Dropdown.Toggle variant=\"warning\" id=\"dropdown-basic\">\n           Topics\n        </Dropdown.Toggle>\n        <Dropdown.Menu className=\"content_here\">\n        <Button className=\"button_action\"onClick={this.handleChange} value=\"java\">Java</Button>\n        <Button className=\"button_action\"onClick={this.handleChange} value=\"css\">Css</Button>\n        <Button className=\"button_action\"onClick={this.handleChange} value=\"git\">Git</Button>\n        <Button className=\"button_action\"onClick={this.handleChange} value=\"learn to code\">Learn to code</Button>\n        <Button className=\"button_action\"onClick={this.handleChange} value=\"javascript\">Javascript</Button>\n        <Button className=\"button_action\"onClick={this.refresh} value=\"html\">Show all</Button>\n        </Dropdown.Menu>\n        </Dropdown>\n        \n        \n      </div>\n      <div className=\"table_heads\">\n        <h1 className=\"title_heads\">Title</h1> \n        <h1 className=\"for_extra_effects\">Topic</h1> \n        <h1 className=\"for_extra_effects\">Level</h1> \n        <h1 className=\"for_extra_effects\"> Format</h1>\n      </div>\n      \n      <div className=\"table\">\n\n      {this.state.filteredData.map(function(filteredData,index){\n      return(\n        <div>\n        <div  className=\"table_data\" onClick={() =>\n          {window.alert(\"Visit this link for more info..\" + JSON.stringify(filteredData.url))}\n          }>\n          <p className=\"title\">{filteredData.description}</p>\n          <p className=\"for_extra_effects\">{filteredData.topics.join(\", \")}</p>\n          <p className=\"for_extra_effects\">{filteredData.levels.join(\", \")}</p>\n          <p className=\"for_extra_effects\">{filteredData.types.join(\", \")}</p>\n        </div>\n        </div>\n        \n      )\n    }\n    )\n    }\n    </div>\n    <div className=\"footer\">Made by: Amrit Singh Dhatt, with ReactJS</div>\n    </div>\n  );\n}\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n"],"sourceRoot":""}